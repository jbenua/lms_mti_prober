{
    "Как называется методология проектирования, соединяющая в себе процесс объектной декомпозиции и приемы представления логической и физической, а также статической и динамической моделей проектируемой системы?":
    {
        "result":
        {
            "объектно-ориентированное проектирование": "1",
            "объектно-ориентированное программирование": "0",
            "структурное проектирование": "0"
        },
        "answers": ["объектно-ориентированное проектирование", "структурное проектирование", "объектно-ориентированное программирование"],
        "iter": 4,
        "multi": False
    },
    "Защита программного средства от отказов чужой программы означает, что":
    {
        "result":
        {
            "изменение внешней информационной среды защищаемой программы со стороны другой, параллельно выполняемой программы, будет невозможно или сильно затруднено без разрешения защищаемой программы": "0",
            "на выполнение функций защищаемой программы не будут влиять сбои аппаратуры": "0",
            "на выполнение функций защищаемой программой не будут влиять отказы (проявления ошибок), возникающие в параллельно выполняемых программах": "1"
        },
        "answers": ["изменение внешней информационной среды защищаемой программы со стороны другой, параллельно выполняемой программы, будет невозможно или сильно затруднено без разрешения защищаемой программы", "на выполнение функций защищаемой программы не будут влиять сбои аппаратуры", "на выполнение функций защищаемой программой не будут влиять отказы (проявления ошибок), возникающие в параллельно выполняемых программах"],
        "iter": 1,
        "multi": False
    },
    "Что такое сохраняемость, как элемент объективно-ориентированной модели?":
    {
        "result":
        {
            "разделение программы на фрагменты, которые компилируются по отдельности, но могут устанавливать связи с другими модулями": "0",
            "способ защититься от использования объектов одного класса вместо другого, или, по крайней мере, управлять таким использованием": "0",
            "способность объекта существовать во времени, переживая породивший его процесс, и (или) в пространстве, перемещаясь из своего первоначального адресного пространства": "1"
        },
        "answers": ["способ защититься от использования объектов одного класса вместо другого, или, по крайней мере, управлять таким использованием", "разделение программы на фрагменты, которые компилируются по отдельности, но могут устанавливать связи с другими модулями", "способность объекта существовать во времени, переживая породивший его процесс, и (или) в пространстве, перемещаясь из своего первоначального адресного пространства"],
        "iter": 1,
        "multi": False
    },
    "Как называется процесс отделения друг от друга элементов объекта, определяющих его устройство и поведение?":
    {
        "result":
        {
            "иерархия": "0",
            "инкапсуляция": "1",
            "параллелизм": "0",
            "модульность": "0"
        },
        "answers": ["инкапсуляция", "иерархия", "параллелизм", "модульность"],
        "iter": 8,
        "multi": False
    },
    "Какой вид абстракций, согласно Боброву и Стефаку, соответствует программированию, ориентированному на ограничения?":
    {
        "result":
        {
            "правила «если — то»": "0",
            "инвариантные соотношения": "1",
            "алгоритмы": "0",
            "классы и объекты": "0"
        },
        "answers": ["классы и объекты", "алгоритмы", "правила «если — то»", "инвариантные соотношения"],
        "iter": 1,
        "multi": False
    },
    "На какие типы по целям делятся библиотеки классов?":
    {
        "result":
        {
            "на библиотеки конкретных классов и библиотеки шаблонов": "0",
            "на библиотеки абстрактных классов и среды разработки": "0",
            "на библиотеки общего назначения и библиотеки, специализированные по областям применения": "1"
        },
        "answers": ["на библиотеки общего назначения и библиотеки, специализированные по областям применения", "на библиотеки конкретных классов и библиотеки шаблонов", "на библиотеки абстрактных классов и среды разработки"],
        "iter": 4,
        "multi": False
    },
    "Укажите наиболее часто применяемый способ приспособления классов и объектов к конкретной задаче":
    {
        "result":
        {
            "реализация некоторого интерфейса для того, чтобы класс мог работать в наборе с другими классами": "0",
            "уточнение с помощью наследования, т.е. базовые классы, имеющиеся в библиотеке, реализуют основные алгоритмы обработки, а в программе из них выводятся конкретные классы, изменяющие и приспосабливающие их к текущей задаче": "1",
            "классы, реализующие какие-либо объекты, пригодные для использования в различных программах, помещаются в библиотеку и настраиваются с помощью параметров": "0"
        },
        "answers": ["уточнение с помощью наследования, т.е. базовые классы, имеющиеся в библиотеке, реализуют основные алгоритмы обработки, а в программе из них выводятся конкретные классы, изменяющие и приспосабливающие их к текущей задаче", "реализация некоторого интерфейса для того, чтобы класс мог работать в наборе с другими классами", "классы, реализующие какие-либо объекты, пригодные для использования в различных программах, помещаются в библиотеку и настраиваются с помощью параметров"],
        "iter": 4,
        "multi": False
    },
    "Для чего предназначен Rational Unified Process?":
    {
        "result":
        {
            "для организации всего жизненного цикла программирования, начиная от анализа деятельности организации (бизнес-моделирования) и кончая тестированием и установкой системы": "1",
            "для поддержки разработки на языках Ада и Си++": "0",
            "для контроля за техническими заданиями и требованиями к системе": "0",
            "для автоматизации разработки документации": "0"
        },
        "answers": ["для поддержки разработки на языках Ада и Си++", "для автоматизации разработки документации", "для контроля за техническими заданиями и требованиями к системе", "для организации всего жизненного цикла программирования, начиная от анализа деятельности организации (бизнес-моделирования) и кончая тестированием и установкой системы"],
        "iter": 1,
        "multi": False
    },
    "Через какие примитивы качества программного средства выражается его модифицируемость?":
    {
        "result":
        {
            "документированность, информативность, понятность, структурированность и удобочитаемость": "0",
            "структурированность, изучаемость и понятность": "0",
            "расширяемость, легкость изменения, структурированность и модульность": "1"
        },
        "answers": ["структурированность, изучаемость и понятность", "документированность, информативность, понятность, структурированность и удобочитаемость", "расширяемость, легкость изменения, структурированность и модульность"],
        "iter": 1,
        "multi": False
    },
    "Как называется некоторое логическое условие, значение которого (истина или ложь) должно сохраняться?":
    {
        "result":
        {
            "инкапсуляция": "0",
            "инвариант": "1",
            "абстракция": "0"
        },
        "answers": ["инкапсуляция", "инвариант", "абстракция"],
        "iter": 2,
        "multi": False
    },
    "Какой вид защиты программного средства включает в себя защиту от так называемых «компьютерных вирусов»?":
    {
        "result":
        {
            "защита от ошибок пользователя": "0",
            "защита от злонамеренного влияния чужих программ": "1",
            "защита от сбоев аппаратуры": "0",
            "защита от отказов чужой программы": "0"
        },
        "answers": ["защита от отказов чужой программы", "защита от сбоев аппаратуры", "защита от ошибок пользователя", "защита от злонамеренного влияния чужих программ"],
        "iter": 1,
        "multi": False
    },
    "Какое CASE-средство, выпускаемое компанией Rational, предназначено для построения моделей и их графического изображения с помощью языка UML?":
    {
        "result":
        {
            "SoD А®": "0",
            "Rational Apex®": "0",
            "Rational Rose®": "1",
            "ClearCase®": "0"
        },
        "answers": ["ClearCase®", "SoD А®", "Rational Apex®", "Rational Rose®"],
        "iter": 1,
        "multi": False
    },
    "Значение какой погрешности зависит от того, как запрограммированы выражения?":
    {
        "result":
        {
            "погрешности округления": "1",
            "погрешности используемого метода вычисления": "0",
            "погрешности представления используемых данных": "0"
        },
        "answers": ["погрешности используемого метода вычисления", "погрешности представления используемых данных", "погрешности округления"],
        "iter": 1,
        "multi": False
    },
    "Чем определяется изучаемость программного средства (ПС)?":
    {
        "result":
        {
            "приемлемым пользовательским интерфейсом": "0",
            "мобильностью ПС": "0",
            "составом и качеством документации по сопровождению ПС": "1"
        },
        "answers": ["составом и качеством документации по сопровождению ПС", "приемлемым пользовательским интерфейсом", "мобильностью ПС"],
        "iter": 4,
        "multi": False
    },
    "Что представляет собой система Paradigm Plus, которая используется в качестве поддержки программного обеспечения ECM?":
    {
        "result":
        {
            "набор рекомендаций по выполнению разных процессов жизненного цикла программ, оформленный в виде базы знаний": "0",
            "набор рекомендаций по разбиению жизненного цикла программ на отдельные этапы, рекомендации по организации этих этапов, объединенные с CASE-системой построения моделей для всех этапов": "1",
            "набор рекомендаций по конфигурационному управлению и контролю за версиями исходных текстов программ": "0"
        },
        "answers": ["набор рекомендаций по конфигурационному управлению и контролю за версиями исходных текстов программ", "набор рекомендаций по выполнению разных процессов жизненного цикла программ, оформленный в виде базы знаний", "набор рекомендаций по разбиению жизненного цикла программ на отдельные этапы, рекомендации по организации этих этапов, объединенные с CASE-системой построения моделей для всех этапов"],
        "iter": 1,
        "multi": False
    },
    "Укажите способ приспособления функции к конкретной программе":
    {
        "result":
        {
            "уточнение с помощью наследования": "0",
            "реализация нового интерфейса": "0",
            "задание различных аргументов": "1"
        },
        "answers": ["реализация нового интерфейса", "уточнение с помощью наследования", "задание различных аргументов"],
        "iter": 1,
        "multi": False
    },
    "Как называется набор рекомендаций по выполнению разных процессов жизненного цикла программ, оформленный в виде базы знаний?":
    {
        "result":
        {
            "TeamTest": "0",
            "Paradigm Plus": "0",
            "Rational Unified Process": "1"
        },
        "answers": ["TeamTest", "Paradigm Plus", "Rational Unified Process"],
        "iter": 1,
        "multi": False
    },
    "Как называется упорядочение абстракций, расположение их по уровням?":
    {
        "result":
        {
            "модульность": "0",
            "параллелизм": "0",
            "иерархия": "1",
            "типизация": "0"
        },
        "answers": ["модульность", "типизация", "параллелизм", "иерархия"],
        "iter": 1,
        "multi": False
    },
    "Какое CASE-средство, выпускаемое компанией Rational, предназначено для автоматизации тестирования?":
    {
        "result":
        {
            "TeamTest": "1",
            "SoD А®": "0",
            "Rational Apex®": "0",
            "ClearQuest™": "0"
        },
        "answers": ["SoD А®", "ClearQuest™", "Rational Apex®", "TeamTest"],
        "iter": 1,
        "multi": False
    },
    "В каком случае возможно реальное ускорение процесса разработки программного обеспечения?":
    {
        "result":
        {
            "когда конкретная программная система разрабатывается не с нуля, а используя готовые составные части": "1",
            "когда конкретная программная система разрабатывается с нуля": "0",
            "когда конкретная программная система только в крайнем случае использует готовые составные части": "0"
        },
        "answers": ["когда конкретная программная система разрабатывается с нуля", "когда конкретная программная система разрабатывается не с нуля, а используя готовые составные части", "когда конкретная программная система только в крайнем случае использует готовые составные части"],
        "iter": 2,
        "multi": False
    },
    "Какова цель создания библиотек функций и библиотек классов?":
    {
        "result":
        {
            "многократное использование готовых решений": "1",
            "поиск новых решений": "0",
            "обработка и уточнение готовых решений": "0"
        },
        "answers": ["многократное использование готовых решений", "поиск новых решений", "обработка и уточнение готовых решений"],
        "iter": 4,
        "multi": False
    },
    "К какому виду защиты относится защита от взлома защиты?":
    {
        "result":
        {
            "защита от несанкционированного доступа": "1",
            "защита от злонамеренного влияния чужих программ": "0",
            "защита от защиты": "0"
        },
        "answers": ["защита от защиты", "защита от злонамеренного влияния чужих программ", "защита от несанкционированного доступа"],
        "iter": 1,
        "multi": False
    },
    "Что такое объектно-ориентированный анализ?":
    {
        "result":
        {
            "это методология проектирования, соединяющая в себе процесс объектной декомпозиции и приемы представления логической и физической, а также статической и динамической моделей проектируемой системы": "0",
            "это методология программирования, основанная на представлении программы в виде совокупности объектов, каждый из которых является экземпляром определенного класса, а классы образуют иерархию наследования": "0",
            "это методология, при которой требования к системе воспринимаются с точки зрения классов и объектов, выявленных в предметной области": "1"
        },
        "answers": ["это методология, при которой требования к системе воспринимаются с точки зрения классов и объектов, выявленных в предметной области", "это методология программирования, основанная на представлении программы в виде совокупности объектов, каждый из которых является экземпляром определенного класса, а классы образуют иерархию наследования", "это методология проектирования, соединяющая в себе процесс объектной декомпозиции и приемы представления логической и физической, а также статической и динамической моделей проектируемой системы"],
        "iter": 4,
        "multi": False
    },
    "Какое качество программного средства обеспечивают его независимость от устройств, автономность, структурированность и модульность?":
    {
        "result":
        {
            "структурированность": "0",
            "эффективность": "0",
            "мобильность": "1",
            "расширяемость": "0"
        },
        "answers": ["расширяемость", "мобильность", "эффективность", "структурированность"],
        "iter": 4,
        "multi": False
    },
    "Какие примитивы качества программных средств реализуются программным путем?":
    {
        "result":
        {
            "понятность и изучаемость": "0",
            "коммуникабельность, устойчивость и защищаемость": "1",
            "документированность и информативность": "0"
        },
        "answers": ["коммуникабельность, устойчивость и защищаемость", "документированность и информативность", "понятность и изучаемость"],
        "iter": 4,
        "multi": False
    }
}